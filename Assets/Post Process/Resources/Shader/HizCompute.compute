// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CopyDepth
#pragma kernel Mip1

Texture2D<float> Depth1;
RWTexture2D<float> Depth2;


[numthreads(8,8,1)]
void CopyDepth (uint3 id : SV_DispatchThreadID)
{   
    // Depth1: original depth
    // Depth2: copy of Depth1
    Depth2[id.xy] = Depth1[id.xy].x;
}



// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
[numthreads(8,8,1)]
void Mip1 (uint3 id : SV_DispatchThreadID)
{
   // calculate the size of the grid
    uint2 groupID = id.xy * 2;
    float d1 = Depth1[groupID].x;
    float d2 = Depth1[groupID + uint2(1, 0)].x;
    float d3 = Depth1[groupID + uint2(0, 1)].x;
    float d4 = Depth1[groupID + uint2(1, 1)].x;
    float minDepth = max(max(max(d1, d2), d3), d4);

    Depth2[id.xy] = minDepth;    
}